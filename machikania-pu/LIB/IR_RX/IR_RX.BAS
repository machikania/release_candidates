REM IR remote controller receiver class (NEC format)
REM IR_RX.BAS

REM Usage:
REM R=NEW(IR_RX,P)
REM  Initialize and Start TIMER
REM  P:I/O bit number

REM METHOD IRSTOP
REM  Stop TIMER INTERRUPT

REM STATIC PUBLIC DAT
REM  32 bit value received

REM Notice!
REM This Class uses TIMER Interrupt.

REM ----- IR_RX Class sample code -----

USECLASS IR_RX
R=NEW(IR_RX,0)
DO
 IDLE
 IF KEYS()=1 THEN BREAK
 K=IR_RX::DAT
 IF K!=0 AND K!=L THEN PRINT HEX$(K,8)
 L=K
LOOP
R.IRSTOP()
END

REM ----- Class code starts here -----

OPTION CLASSCODE

STATIC PUBLIC DAT
STATIC PRIVATE IRPORT,T1,T2,T3,ER,P1,P2,DAT2,DAT3,CT

METHOD INIT
 USETIMER 100
 IRPORT=ARGS(1)
 DAT=0:DAT2=0:DAT3=0
 T2=0:P2=0:CT=0
 INTERRUPT TIMER,IRRISR
RETURN

METHOD IRSTOP
 INTERRUPT STOP TIMER
RETURN

LABEL IRRISR
 T1=TIMER()
 T3=T1-T2
 ER=0
 IF T3>1090 THEN DAT=0:ER=1
 P1=IN(IRPORT)
 IF P1!=P2 THEN
  T2=T1
  IF CT=0 THEN
   REM Nothing to do
  ELSEIF CT=1 THEN
   IF T3<86 OR T3>93 THEN ER=1
  ELSEIF CT=2 THEN
   IF T3>19 AND T3<26 THEN
    CT=66:DAT3=DAT2
   ELSEIF T3>42 AND T3<48 THEN
    REM Nothing to do
   ELSE
    ER=1
   ENDIF
  ELSEIF CT=68 THEN
   ER=1
  ELSEIF CT AND 1 THEN
   IF T3<2 OR T3>9 THEN ER=1
  ELSE
   IF T3>2 AND T3<9 THEN
    DAT3=DAT3<<1
   ELSEIF T3>14 AND T3<20 THEN
    DAT3=(DAT3<<1)+1
   ELSE
    ER=1
   ENDIF
  ENDIF
  CT=CT+1
  P2=P1
  IF CT=68 THEN
   IF ((DAT3>>8) AND $FF) = ((DAT3 AND $FF) XOR $FF) THEN DAT=DAT3:DAT2=DAT3:ER=1
  ENDIF
 ENDIF
 IF ER THEN CT=0:P2=1:DAT3=0
RETURN
